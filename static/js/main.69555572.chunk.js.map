{"version":3,"sources":["component/card/card.js","socket.js","container/myhand/myhand.js","component/oponenthand/opponenthand.js","constants/constant.js","constants/en.js","constants/hi.js","constants/baburaw.js","component/tellhands/tellhands.js","component/trumpdecide/trumpdecide.js","container/board/board.js","container/game/game.js","component/join-create/joinorcreate.js","App.js","serviceWorker.js","index.js"],"names":["props","card","visible","otherProps","of","suit","value","path","className","src","alt","socketEndpoint","window","location","href","indexOf","host","socket","socketIOClient","require","values","valueOf","hand","isMyTurn","username","currentBoard","trump","style","marginTop","sort","c1","c2","localeCompare","map","key","onClick","board","length","baseSuit","filter","c","clickable","emit","message","warn","player","isVerticle","cards","points","handsCountTold","Lang_toConstants","en","WAITING_TO_JOIN","TELL_HANDS","TRUMP_DECIDE","GAME_STARTED","YOUR_MOVE","WAITING","LAST_ROUND_WINNER","MY_HAND_SUBTITLE","YOU_TELL_HANDS","hi","baburaw","constants","setConstants","lang","gameCode","replace","tellHandsUsername","trumpTeller","minHandsToTell","yourMove","waiting","turnOf","lastRoundWinner","minHands","useState","hands","setHands","Constants","suits","setTrump","display","flexDirection","alignSelf","s","backgroundColor","width","Game","gameRoomData","JSON","parse","this","console","log","players","playersOrder","status","boardComponent","undefined","push","shift","p","i","Component","onCreate","onJoin","alignItems","id","placeholder","type","localStorage","getItem","justifyContent","e","document","getElementById","App","on","data","setItem","setState","stringify","render","state","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"8SAEe,WAAAA,GAAU,IACfC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,QAAgBC,GAAeH,EAAtBI,GADD,YACuBJ,EADvB,0BAEdK,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MACVC,EAAO,qBAIX,OAHIL,IACFK,EAAI,gBAAYD,GAAZ,OAAoBD,EAApB,SAEC,yCAASF,EAAT,CAAqBK,UAAU,OAAOC,IAAKF,EAAMG,IAAKH,M,iBCN3DI,EAAiB,GAKnBA,GAH8C,GAA9CC,OAAOC,SAASC,KAAKC,QAAQ,eACiB,GAA9CH,OAAOC,SAASC,KAAKC,QAAQ,aAEZ,kBACkC,GAA5CH,OAAOC,SAASC,KAAKC,QAAQ,WACnBH,OAAOC,SAASG,KAAO,QACpB,6BAEtB,IACeC,EADAC,IAAeP,G,SCTxBI,EAAUI,EAAQ,KAElBC,EAAS,CACb,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KAEF,SAASC,EAAQf,GACf,OAAOS,EAAQK,EAAQd,GAUV,eAAAN,GAAU,IACfsB,EAAkDtB,EAAlDsB,KAAMC,EAA4CvB,EAA5CuB,SAAUC,EAAkCxB,EAAlCwB,SAAiBC,GAAiBzB,EAAxB0B,MAAwB1B,EAAjByB,cACzC,OACE,yBAAKE,MAAOJ,EAAW,CAAEK,UAAW,QAAW,IAC7C,yBAAKpB,UAAU,kCACZc,EACEO,MAAK,SAACC,EAAIC,GAAL,OAAYV,EAAQU,EAAGzB,OAASe,EAAQS,EAAGxB,UAChDuB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGzB,KAAK2B,cAAcD,EAAG1B,SAC1C4B,KAAI,SAAChC,EAAMiC,GAAP,OACH,kBAAC,EAAD,CACEC,QAAS,kBACPZ,GAlBhB,SAAmBtB,EAAMqB,EAAMc,GAC7B,GAAqB,IAAjBA,EAAMC,OAAc,OAAO,EAC/B,IAAMC,EAAWF,EAAM,GAAGnC,KAAKI,KAC/B,OAAIJ,EAAKI,OAASiC,GACsC,IAAjDhB,EAAKiB,QAAO,SAAAC,GAAC,OAAIA,EAAEnC,OAASiC,KAAUD,OAcnBI,CAAUxC,EAAMqB,EAAMG,GAC9BR,EAAOyB,KAAK,aAAc,CAAElB,WAAUvB,SACtC0C,IAAQC,KAAK,0BAEnB1C,SAAS,EACTgC,IAAKA,EACLjC,KAAMA,UC9CL,WAAAD,GAAU,IACf6C,EAAiC7C,EAAjC6C,OAAQC,EAAyB9C,EAAzB8C,WAAYtB,EAAaxB,EAAbwB,SACpBuB,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,OAAQC,EAAmBJ,EAAnBI,eACvB,OACE,yBAAKzC,UAAS,eAAUsC,EAAa,IAAM,IAA7B,6BACZ,uBAAGtC,UAAU,QACVgB,EADH,aACuBwB,EAAOX,OAD9B,aACgDY,EADhD,KAGA,6BACGF,EAAMd,KAAI,SAAChC,EAAMiC,GAAP,OACT,kBAAC,EAAD,CAAMA,IAAKA,EAAKjC,KAAMA,U,QCR1BiD,EAAmB,CACvBC,GCNa,CACbC,gBAAiB,oDACjBC,WAAY,kDACZC,aACE,6FACFC,aAAc,CACZC,UAAW,aACXC,QAAS,wCACTC,kBAAmB,2CAErBC,iBAAkB,sDAClBC,eAAgB,iCDJhBC,GEPa,CACbT,gBACE,mEACFC,WAAY,6DACZC,aACE,8EACFC,aAAc,CACZC,UAAW,kBACXC,QAAS,0BACTC,kBAAmB,+CAErBC,iBAAkB,oDAClBC,eAAgB,sBFJhBE,QGRa,CACbV,gBACE,+EACFC,WACE,qFACFC,aACE,qFACFC,aAAc,CACZC,UAAW,kBACXC,QAAS,2CACTC,kBAAmB,yDAErBC,iBAAkB,oDAClBC,eAAgB,6BHFdG,EAAYb,EAAgB,QAEnBc,EAAe,SAAAC,GAC1BF,EAAYb,EAAiBe,IAGhB,EACE,SAAAC,GAAQ,OACrBH,EAAUX,gBAAgBe,QAAQ,gBAAiBD,IAFxC,EAGF,SAAAE,GAAiB,OAC1BL,EAAUV,WAAWc,QAAQ,yBAA0BC,IAJ5C,EAKA,SAACC,EAAaC,GAAd,OACXP,EAAUT,aAAaa,QAAQ,mBAAoBE,GAAaF,QAC9D,sBACAG,IARS,EAUA,CACXC,SAAU,kBAAMR,EAAUR,aAAaC,WACvCgB,QAAS,SAAAC,GAAM,OACbV,EAAUR,aAAaE,QAAQU,QAAQ,cAAeM,IACxDC,gBAAiB,SAAAA,GAAe,OAC9BX,EAAUR,aAAaG,kBAAkBS,QACvC,uBACAO,KAjBO,EAoBG,SAAClD,EAAUwB,EAAQtB,GAAnB,OACdqC,EAAUJ,iBAAiBQ,QAAQ,gBAAiB3C,GACjD2C,QAAQ,cAAenB,GACvBmB,QAAQ,aAAczC,IAvBd,EAwBC,kBAAMqC,EAAUH,gBIrCjB,WAAA5D,GAAU,IACf2E,EAAuB3E,EAAvB2E,SAAUnD,EAAaxB,EAAbwB,SADI,EAGIoD,mBAASD,GAHb,mBAGfE,EAHe,KAGRC,EAHQ,KAItB,OACE,oCACE,yBAAKtE,UAAU,cACb,yBACE2B,QAAS,WACH0C,EAAQF,GAAUG,EAASD,EAAQ,IAEzCrE,UAAU,UAJZ,KAQA,2BAAIqE,GACJ,yBACE1C,QAAS,WACH0C,EAAQ,IAAIC,EAASD,EAAQ,IAEnCrE,UAAU,UAJZ,KAQA,yBACE2B,QAAS,WACPlB,EAAOyB,KAAK,gBAAiB,CAAElB,WAAUqD,WAE3CrE,UAAU,UAJZ,WASF,2BAAIuE,OCnCJC,EAAQ,CAAC,IAAK,IAAK,IAAK,KACf,WAAAhF,GAAU,IACfwB,EAAaxB,EAAbwB,SADc,EAEIoD,mBAAS,KAFb,mBAEflD,EAFe,KAERuD,EAFQ,KAGtB,OACE,yBAAKtD,MAAO,CAAEuD,QAAS,OAAQC,cAAe,WAC5C,yBAAKxD,MAAO,CAAEyD,UAAW,WAAzB,gBACA,yBAAK5E,UAAU,gBACZwE,EAAM/C,KAAI,SAAAoD,GAAC,OACV,yBACE1D,MAAOD,IAAU2D,EAAI,CAAEC,gBAAiB,QAAW,GACnDnD,QAAS,kBAAM8C,EAASI,KAEvBA,OAIP,yBACE1D,MAAO,CAAEyD,UAAW,UACpBjD,QAAS,WACPlB,EAAOyB,KAAK,eAAgB,CAAElB,WAAUE,WAE1ClB,UAAU,UALZ,YChBS,WAAAR,GACeA,EAApBwB,SADe,IACLuB,EAAU/C,EAAV+C,MAClB,OACE,6BACE,yBAAKvC,UAAU,eACZuC,EAAMd,KAAI,SAAChC,EAAMiC,GAAP,OACT,yBAAK1B,UAAU,kCACb,kBAAC,EAAD,CACEmB,MAAO,CAAE4D,MAAO,QAChBrD,IAAKA,EACLhC,SAAS,EACTD,KAAMA,EAAKA,KACXG,GAAIH,EAAKuB,WAEX,6BAAMvB,EAAKuB,iBCTFgE,E,uKAEjB,IAAMC,EAAeC,KAAKC,MAAMC,KAAK5F,MAAMyF,cACrCjE,EAAWoE,KAAK5F,MAAMwB,SAC5BqE,QAAQC,IAAIL,EAAcjE,GAHnB,IAICuE,EAAmDN,EAAnDM,QAAS7B,EAA0CuB,EAA1CvB,SAAU8B,EAAgCP,EAAhCO,aAAcC,EAAkBR,EAAlBQ,OAAQvE,EAAU+D,EAAV/D,MAEjD,GAAe,oBAAXuE,EACF,OAAO,2BAAIlB,EAAwBb,IAErC,IAAIgC,OAAiBC,EAuDrB,IAtDe,eAAXF,IAEAC,EADE1E,IAAaiE,EAAarB,kBAE1B,kBAAC,EAAD,CACE5C,SAAUA,EACVmD,SAAUc,EAAanB,iBAKzB,2BAAIS,EAAoBU,EAAarB,qBAI5B,iBAAX6B,IAEAC,EADE1E,IAAaiE,EAAapB,YACX,kBAAC,EAAD,CAAa7C,SAAUA,IAGtC,2BACGuD,EACCU,EAAapB,YACboB,EAAanB,kBAMR,iBAAX2B,IAEAC,EADE1E,IAAaiE,EAAahB,OAE1B,6BACE,6BAAMM,EAAsBR,YAC5B,6BACGQ,EAAsBL,gBACrBe,EAAaf,mBAOnB,6BACE,6BAAMK,EAAsBP,QAAQiB,EAAahB,SACjD,6BACGM,EAAsBL,gBACrBe,EAAaf,oBAQlBsB,EAAa,KAAOxE,GACzBwE,EAAaI,KAAKJ,EAAaK,SAEjC,OACE,yBAAK7F,UAAU,iBACZwF,EACEzD,QAAO,SAAA+D,GAAC,OAAIA,IAAM9E,KAClBS,KAAI,SAACqE,EAAGC,GACP,OACE,yBAAKrE,IAAKqE,EAAG/F,UAAS,gBAAW+F,EAAX,YACpB,kBAAC,EAAD,CACEzD,WAAYyD,EAAI,IAAM,EACtB1D,OAAQkD,EAAQO,GAChB9E,SAAU8E,QAKpB,yBAAK9F,UAAU,MACb,kBAAC,EAAD,CACEkB,MAAOA,EACPF,SAAUA,EACVD,SAAUC,IAAaiE,EAAahB,OACpCnD,KAAMyE,EAAQvE,GAAUuB,MACxBtB,aAAcgE,EAAahE,eAE7B,4BACGsD,EACCvD,EACAuE,EAAQvE,GAAUwB,OAAOX,OACzBX,KAIN,yBAAKlB,UAAU,SACD,iBAAXyF,EACC,kBAAC,EAAD,CACEzE,SAAUA,EACVuB,MAAO0C,EAAahE,eAEpB,MAEN,yBAAKjB,UAAU,cAAc0F,Q,GA3GHM,aCNnB,WAAAxG,GAAU,IACfyG,EAAqBzG,EAArByG,SAAUC,EAAW1G,EAAX0G,OAClB,OACE,yBACE/E,MAAO,CACLuD,QAAS,OACTC,cAAe,SACfwB,WAAY,WAGd,2BAAOC,GAAG,cAAcC,YAAY,WAAWC,KAAK,SACpD,2BACEF,GAAG,YACHC,YACEE,aAAaC,QAAQ,YACjBD,aAAaC,QAAQ,YACrB,YAENF,KAAK,SAEP,yBACEnF,MAAO,CACLuD,QAAS,OACT+B,eAAgB,gBAChB1B,MAAO,QAGT,yBACE/E,UAAU,SACV2B,QAAS,SAAA+E,GACPR,EACiD,KAA/CS,SAASC,eAAe,aAAa9G,MACjCyG,aAAaC,QAAQ,YACrBG,SAASC,eAAe,aAAa9G,MACzC6G,SAASC,eAAe,eAAe9G,OAEzC0D,EAAamD,SAASC,eAAe,QAAQ9G,SATjD,QAcA,yBACEE,UAAU,SACV2B,QAAS,SAAA+E,GACPT,EAASU,SAASC,eAAe,eAAe9G,OAChD0D,EAAamD,SAASC,eAAe,QAAQ9G,SAJjD,eAUF,4BAAQsG,GAAG,QACT,4BAAQtG,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,WAAd,cCGO+G,E,kDApDb,WAAYrH,GAAQ,IAAD,8BACjB,cAAMA,IAaRyG,SAAW,SAAAjF,GACTP,EAAOyB,KAAK,SAAU,CAAElB,aACxBP,EAAOqG,GAAG,WAAW,SAAAC,GACnBR,aAAaS,QAAQ,WAAYD,EAAKrD,UACtC,EAAKuD,SAAS,CACZhC,aAAcC,KAAKgC,UAAUH,GAC7B/F,SAAUA,OAGdP,EAAOqG,GAAG,UAAU,SAAAC,GAClB,EAAKE,SAAS,CAAEhC,aAAcC,KAAKgC,UAAUH,SAxB9B,EA4BnBb,OAAS,SAACxC,EAAU1C,GAClBP,EAAOyB,KAAK,OAAQ,CAAEwB,WAAU1C,aAChCP,EAAOqG,GAAG,UAAU,SAAAC,GAClB,EAAKE,SAAS,CAAEhC,aAAcC,KAAKgC,UAAUH,GAAO/F,iBA/BrC,EAmCnBmG,OAAS,WAAO,IAAD,EACsB,EAAKC,MAAhCnC,EADK,EACLA,aAAcjE,EADT,EACSA,SACtB,OACE,yBAAKhB,UAAU,OACZiF,EACC,kBAAC,EAAD,CAAMA,aAAcA,EAAcjE,SAAUA,IAE5C,kBAAC,EAAD,CACEiF,SAAU,EAAKA,SACfC,OAAQ,EAAKA,WA1CrB,EAAKkB,MAAQ,CACXnC,kBAAcU,EACd3E,cAAU2E,GAGZlF,EAAOqG,GAAG,UAAU,SAAAC,GAClB,EAAKE,SAAS,CACZhC,aAAcC,KAAKgC,UAAUH,QAThB,E,UADHf,aCMEqB,QACW,cAA7BjH,OAAOC,SAASiH,UAEe,UAA7BlH,OAAOC,SAASiH,UAEhBlH,OAAOC,SAASiH,SAASC,MACvB,2DCZNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFd,SAASC,eAAe,SDyHpB,kBAAmBc,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAM9F,c","file":"static/js/main.69555572.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default props => {\n  const { card, visible, of, ...otherProps } = props;\n  const { suit, value } = card;\n  let path = \"cards/RED_BACK.svg\";\n  if (visible) {\n    path = `cards/${value}${suit}.svg`;\n  }\n  return <img {...otherProps} className=\"card\" src={path} alt={path}></img>;\n};\n","import socketIOClient from \"socket.io-client\";\n\nlet PORT = 4001;\nlet socketEndpoint = \"\";\nif (\n  window.location.href.indexOf(\"localhost\") != -1 ||\n  window.location.href.indexOf(\"127.0.0.1\") != -1\n)\n  socketEndpoint = \"localhost:\" + PORT;\nelse if (window.location.href.indexOf(\"192.168\") != -1)\n  socketEndpoint = window.location.host + \":\" + PORT;\nelse socketEndpoint = \"http://18.216.249.155:\" + PORT;\n\nconst socket = socketIOClient(socketEndpoint);\nexport default socket;\n","import React from \"react\";\nimport Card from \"../../component/card/card\";\nimport socket from \"../../socket\";\nimport { message } from \"antd\";\nconst indexOf = require(\"lodash/indexOf\");\n\nconst values = [\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"J\",\n  \"Q\",\n  \"K\",\n  \"A\"\n];\nfunction valueOf(value) {\n  return indexOf(values, value);\n}\n\nfunction clickable(card, hand, board) {\n  if (board.length === 0) return true;\n  const baseSuit = board[0].card.suit;\n  if (card.suit === baseSuit) return true;\n  return hand.filter(c => c.suit === baseSuit).length === 0;\n}\n\nexport default props => {\n  const { hand, isMyTurn, username, trump, currentBoard } = props;\n  return (\n    <div style={isMyTurn ? { marginTop: \"20px\" } : {}}>\n      <div className=\"hand hhand-compact active-hand\">\n        {hand\n          .sort((c1, c2) => valueOf(c2.value) - valueOf(c1.value))\n          .sort((c1, c2) => c1.suit.localeCompare(c2.suit))\n          .map((card, key) => (\n            <Card\n              onClick={() =>\n                isMyTurn && clickable(card, hand, currentBoard)\n                  ? socket.emit(\"dealt-card\", { username, card })\n                  : message.warn(\"cannot deal this card\")\n              }\n              visible={true}\n              key={key}\n              card={card}\n            ></Card>\n          ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"../card/card\";\n\nexport default props => {\n  const { player, isVerticle, username } = props;\n  const { cards, points, handsCountTold } = player;\n  return (\n    <div className={`hand ${isVerticle ? \"v\" : \"h\"}hand-compact active-hand`}>\n      <p className=\"text\">\n        {username}(Points - {points.length})(hands - {handsCountTold})\n      </p>\n      <div>\n        {cards.map((card, key) => (\n          <Card key={key} card={card}></Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { LANGUAGE } from \"../config\";\nimport EnConstants from \"./en\";\nimport HIConstants from \"./hi\";\nimport BaburawConstants from \"./baburaw\";\n\nconst Lang_toConstants = {\n  en: EnConstants,\n  hi: HIConstants,\n  baburaw: BaburawConstants\n};\n\nlet constants = Lang_toConstants[LANGUAGE];\n\nexport const setConstants = lang => {\n  constants = Lang_toConstants[lang];\n};\n\nexport default {\n  waitingToJoin: gameCode =>\n    constants.WAITING_TO_JOIN.replace(/\\${gameCode}/g, gameCode),\n  tellHands: tellHandsUsername =>\n    constants.TELL_HANDS.replace(/\\${tellHandsUsername}/g, tellHandsUsername),\n  trumpDecide: (trumpTeller, minHandsToTell) =>\n    constants.TRUMP_DECIDE.replace(/\\${trumpTeller}/g, trumpTeller).replace(\n      /\\${minHandsToTell}/g,\n      minHandsToTell\n    ),\n  gameStarted: {\n    yourMove: () => constants.GAME_STARTED.YOUR_MOVE,\n    waiting: turnOf =>\n      constants.GAME_STARTED.WAITING.replace(/\\${turnOf}/g, turnOf),\n    lastRoundWinner: lastRoundWinner =>\n      constants.GAME_STARTED.LAST_ROUND_WINNER.replace(\n        /\\${lastRoundWinner}/g,\n        lastRoundWinner\n      )\n  },\n  myHandSubtitle: (username, points, trump) =>\n    constants.MY_HAND_SUBTITLE.replace(/\\${username}/g, username)\n      .replace(/\\${points}/g, points)\n      .replace(/\\${trump}/g, trump),\n  youTellHands: () => constants.YOU_TELL_HANDS\n};\n","export default {\n  WAITING_TO_JOIN: \"Waiting for other players, JOIN GAME ${gameCode}.\",\n  TELL_HANDS: \"Waiting for ${tellHandsUsername} to tell Hands.\",\n  TRUMP_DECIDE:\n    \"Waiting for ${trumpTeller} to tell Trump. ${trumpTeller} will make ${minHandsToTell} hands\",\n  GAME_STARTED: {\n    YOUR_MOVE: \"Your move.\",\n    WAITING: \"Waiting for ${turnOf} to deal a card.\",\n    LAST_ROUND_WINNER: \"Last round winner is ${lastRoundWinner}\"\n  },\n  MY_HAND_SUBTITLE: \"${username} (Points - ${points}) (Trump - ${trump})\",\n  YOU_TELL_HANDS: \"How many hands will you make?\"\n};\n","export default {\n  WAITING_TO_JOIN:\n    \"Dhonduu just chill re! Auro ko aane de. Game Code - ${gameCode}.\",\n  TELL_HANDS: \"${tellHandsUsername} bataega ki vo kitne haath banara hai.\",\n  TRUMP_DECIDE:\n    \"${trumpTeller} bataega ki kaat kya hai. Vo ${minHandsToTell} haath banaega.\",\n  GAME_STARTED: {\n    YOUR_MOVE: \"Teri chaal hai.\",\n    WAITING: \"${turnOf} ki baari hai.\",\n    LAST_ROUND_WINNER: \"Pichla vala ${lastRoundWinner} ka bana tha.\"\n  },\n  MY_HAND_SUBTITLE: \"${username} (haath - ${points}) (kaat - ${trump})\",\n  YOU_TELL_HANDS: \"Kitne hath banaea?\"\n};\n","export default {\n  WAITING_TO_JOIN:\n    \"Tere baap ki shaadi hai kya re! Auro ko aane de be. Game Code - ${gameCode}.\",\n  TELL_HANDS:\n    \"${tellHandsUsername} ko batana padega na ki vo kitne haath banara hai. Sabar rakh.\",\n  TRUMP_DECIDE:\n    \"${trumpTeller} tereko bataega ki kaat kya hai. Vo ${minHandsToTell} haath banaega.\",\n  GAME_STARTED: {\n    YOUR_MOVE: \"Chal re halkat!\",\n    WAITING: \"Ae isko bata re, ${turnOf} ki baari hai.\",\n    LAST_ROUND_WINNER: \"Pichla vala ${lastRoundWinner} bana kr le gaya saala.\"\n  },\n  MY_HAND_SUBTITLE: \"${username} (haath - ${points}) (kaat - ${trump})\",\n  YOU_TELL_HANDS: \"Kitne hath banaea re tu?\"\n};\n","import React, { useState } from \"react\";\nimport socket from \"../../socket\";\nimport Constants from \"../../constants/constant\";\n\nexport default props => {\n  const { minHands, username } = props;\n\n  const [hands, setHands] = useState(minHands);\n  return (\n    <>\n      <div className=\"tell-hands\">\n        <div\n          onClick={() => {\n            if (hands > minHands) setHands(hands - 1);\n          }}\n          className=\"button\"\n        >\n          -\n        </div>\n        <p>{hands}</p>\n        <div\n          onClick={() => {\n            if (hands < 13) setHands(hands + 1);\n          }}\n          className=\"button\"\n        >\n          +\n        </div>\n        <div\n          onClick={() => {\n            socket.emit(\"my-hand-count\", { username, hands });\n          }}\n          className=\"button\"\n        >\n          SUBMIT\n        </div>\n      </div>\n      <p>{Constants.youTellHands()}</p>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport socket from \"../../socket\";\nconst suits = [\"S\", \"H\", \"C\", \"D\"];\nexport default props => {\n  const { username } = props;\n  const [trump, setTrump] = useState(\"S\");\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div style={{ alignSelf: \"center\" }}>Decide Trump</div>\n      <div className=\"trump-option\">\n        {suits.map(s => (\n          <div\n            style={trump === s ? { backgroundColor: \"blue\" } : {}}\n            onClick={() => setTrump(s)}\n          >\n            {s}\n          </div>\n        ))}\n      </div>\n      <div\n        style={{ alignSelf: \"center\" }}\n        onClick={() => {\n          socket.emit(\"trump-decide\", { username, trump });\n        }}\n        className=\"button\"\n      >\n        SUBMIT\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"../../component/card/card\";\n\nexport default props => {\n  const { username, cards } = props;\n  return (\n    <div>\n      <div className=\"board-cards\">\n        {cards.map((card, key) => (\n          <div className=\"hand hhand-compact active-hand\">\n            <Card\n              style={{ width: \"20vh\" }}\n              key={key}\n              visible={true}\n              card={card.card}\n              of={card.username}\n            ></Card>\n            <div>{card.username}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport MyHand from \"../myhand/myhand\";\nimport OpponentHand from \"../../component/oponenthand/opponenthand\";\nimport TellHands from \"../../component/tellhands/tellhands\";\nimport TrumpDecide from \"../../component/trumpdecide/trumpdecide\";\nimport Board from \"../board/board\";\nimport Constants from \"../../constants/constant\";\n\nexport default class Game extends Component {\n  render() {\n    const gameRoomData = JSON.parse(this.props.gameRoomData);\n    const username = this.props.username;\n    console.log(gameRoomData, username);\n    const { players, gameCode, playersOrder, status, trump } = gameRoomData;\n\n    if (status === \"WAITING_TO_JOIN\") {\n      return <p>{Constants.waitingToJoin(gameCode)}</p>;\n    }\n    let boardComponent = undefined;\n    if (status === \"TELL_HANDS\") {\n      if (username === gameRoomData.tellHandsUsername) {\n        boardComponent = (\n          <TellHands\n            username={username}\n            minHands={gameRoomData.minHandsToTell}\n          ></TellHands>\n        );\n      } else {\n        boardComponent = (\n          <p>{Constants.tellHands(gameRoomData.tellHandsUsername)}</p>\n        );\n      }\n    }\n    if (status === \"TRUMP_DECIDE\") {\n      if (username === gameRoomData.trumpTeller) {\n        boardComponent = <TrumpDecide username={username}></TrumpDecide>;\n      } else {\n        boardComponent = (\n          <p>\n            {Constants.trumpDecide(\n              gameRoomData.trumpTeller,\n              gameRoomData.minHandsToTell\n            )}\n          </p>\n        );\n      }\n    }\n    if (status === \"GAME_STARTED\") {\n      if (username === gameRoomData.turnOf) {\n        boardComponent = (\n          <div>\n            <div>{Constants.gameStarted.yourMove()}</div>\n            <div>\n              {Constants.gameStarted.lastRoundWinner(\n                gameRoomData.lastRoundWinner\n              )}\n            </div>\n          </div>\n        );\n      } else {\n        boardComponent = (\n          <div>\n            <div>{Constants.gameStarted.waiting(gameRoomData.turnOf)}</div>\n            <div>\n              {Constants.gameStarted.lastRoundWinner(\n                gameRoomData.lastRoundWinner\n              )}\n            </div>\n          </div>\n        );\n      }\n    }\n\n    while (playersOrder[0] !== username) {\n      playersOrder.push(playersOrder.shift());\n    }\n    return (\n      <div className=\"gameContainer\">\n        {playersOrder\n          .filter(p => p !== username)\n          .map((p, i) => {\n            return (\n              <div key={i} className={`player${i} player`}>\n                <OpponentHand\n                  isVerticle={i % 2 === 0}\n                  player={players[p]}\n                  username={p}\n                ></OpponentHand>\n              </div>\n            );\n          })}\n        <div className=\"me\">\n          <MyHand\n            trump={trump}\n            username={username}\n            isMyTurn={username === gameRoomData.turnOf}\n            hand={players[username].cards}\n            currentBoard={gameRoomData.currentBoard}\n          ></MyHand>\n          <h3>\n            {Constants.myHandSubtitle(\n              username,\n              players[username].points.length,\n              trump\n            )}\n          </h3>\n        </div>\n        <div className=\"board\">\n          {status === \"GAME_STARTED\" ? (\n            <Board\n              username={username}\n              cards={gameRoomData.currentBoard}\n            ></Board>\n          ) : null}\n        </div>\n        <div className=\"scoreboard\">{boardComponent}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { setConstants } from \"../../constants/constant\";\nexport default props => {\n  const { onCreate, onJoin } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      }}\n    >\n      <input id=\"my-username\" placeholder=\"username\" type=\"text\"></input>\n      <input\n        id=\"game-code\"\n        placeholder={\n          localStorage.getItem(\"gameCode\")\n            ? localStorage.getItem(\"gameCode\")\n            : \"game code\"\n        }\n        type=\"text\"\n      ></input>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"40%\"\n        }}\n      >\n        <div\n          className=\"button\"\n          onClick={e => {\n            onJoin(\n              document.getElementById(\"game-code\").value === \"\"\n                ? localStorage.getItem(\"gameCode\")\n                : document.getElementById(\"game-code\").value,\n              document.getElementById(\"my-username\").value\n            );\n            setConstants(document.getElementById(\"lang\").value);\n          }}\n        >\n          JOIN\n        </div>\n        <div\n          className=\"button\"\n          onClick={e => {\n            onCreate(document.getElementById(\"my-username\").value);\n            setConstants(document.getElementById(\"lang\").value);\n          }}\n        >\n          CREATE NEW\n        </div>\n      </div>\n      <select id=\"lang\">\n        <option value=\"en\">English</option>\n        <option value=\"hi\">Hindi</option>\n        <option value=\"baburaw\">Baburaw</option>\n      </select>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Game from \"./container/game/game\";\nimport socket from \"./socket\";\nimport JoinOrCreate from \"./component/join-create/joinorcreate\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameRoomData: undefined,\n      username: undefined\n    };\n\n    socket.on(\"update\", data => {\n      this.setState({\n        gameRoomData: JSON.stringify(data)\n      });\n    });\n  }\n\n  onCreate = username => {\n    socket.emit(\"create\", { username });\n    socket.on(\"created\", data => {\n      localStorage.setItem(\"gameCode\", data.gameCode);\n      this.setState({\n        gameRoomData: JSON.stringify(data),\n        username: username\n      });\n    });\n    socket.on(\"joined\", data => {\n      this.setState({ gameRoomData: JSON.stringify(data) });\n    });\n  };\n\n  onJoin = (gameCode, username) => {\n    socket.emit(\"join\", { gameCode, username });\n    socket.on(\"joined\", data => {\n      this.setState({ gameRoomData: JSON.stringify(data), username });\n    });\n  };\n\n  render = () => {\n    const { gameRoomData, username } = this.state;\n    return (\n      <div className=\"App\">\n        {gameRoomData ? (\n          <Game gameRoomData={gameRoomData} username={username}></Game>\n        ) : (\n          <JoinOrCreate\n            onCreate={this.onCreate}\n            onJoin={this.onJoin}\n          ></JoinOrCreate>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}